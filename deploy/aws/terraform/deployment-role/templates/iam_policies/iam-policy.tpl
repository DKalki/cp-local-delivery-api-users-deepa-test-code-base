{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Action": [
				"acm:AddTagsToCertificate",
				"acm:DeleteCertificate",
				"acm:DescribeCertificate",
				"acm:GetCertificate",
				"acm:ListCertificates",
				"acm:ListTagsForCertificate",
				"acm:RequestCertificate",
				"apigateway:GET",
				"apigateway:POST",
				"apigateway:PUT",
				"apigateway:DELETE",
				"apigateway:PATCH",
				"apigateway:HEAD",
				"apigateway:OPTIONS",
				"apigateway:SetWebACL",
				"iam:AddRoleToInstanceProfile",
				"iam:AttachRolePolicy",
				"iam:CreateInstanceProfile",
				"iam:CreatePolicy",
				"iam:CreateRole",
				"iam:CreateServiceLinkedRole",
				"iam:DeleteInstanceProfile",
				"iam:DeletePolicy",
				"iam:DeleteRole",
				"iam:DeleteRolePolicy",
				"iam:DetachRolePolicy",
				"iam:GetInstanceProfile",
				"iam:GetPolicy",
				"iam:GetPolicyVersion",
				"iam:GetRole",
				"iam:GetRolePolicy",
				"iam:ListAttachedRolePolicies",
				"iam:ListInstanceProfilesForRole",
				"iam:ListPolicies",
				"iam:ListPolicyVersions",
				"iam:ListRolePolicies",
				"iam:PassRole",
				"iam:PutRolePolicy",
				"iam:RemoveRoleFromInstanceProfile",
				"iam:TagPolicy",
				"iam:TagRole",
				"iam:UpdateAssumeRolePolicy",
				"kms:CreateAlias",
				"kms:CreateGrant",
				"kms:CreateKey",
				"kms:DeleteAlias",
				"kms:DeleteAlias",
				"kms:DescribeKey",
				"kms:EnableKeyRotation",
				"kms:Encrypt",
				"kms:GetKeyPolicy",
				"kms:GetKeyRotationStatus",
				"kms:ListAliases",
				"kms:ListGrants",
				"kms:ListResourceTags",
				"kms:PutKeyPolicy",
				"kms:RetireGrant",
				"kms:RevokeGrant",
				"kms:ScheduleKeyDeletion",
				"kms:TagResource",
				"kms:UpdateKeyDescription",
				"lambda:AddPermission",
				"lambda:CreateAlias",
				"lambda:CreateCodeSigningConfig",
				"lambda:CreateEventSourceMapping",
				"lambda:CreateFunction",
				"lambda:DeleteAlias",
				"lambda:DeleteCodeSigningConfig",
				"lambda:DeleteEventSourceMapping",
				"lambda:DeleteFunction",
				"lambda:DeleteFunctionCodeSigningConfig",
				"lambda:DeleteFunctionConcurrency",
				"lambda:GetAccountSettings",
				"lambda:GetAlias",
				"lambda:GetCodeSigningConfig",
				"lambda:GetEventSourceMapping",
				"lambda:GetFunction",
				"lambda:GetFunctionCodeSigningConfig",
				"lambda:GetFunctionConcurrency",
				"lambda:GetFunctionConfiguration",
				"lambda:GetPolicy",
				"lambda:InvokeFunction",
				"lambda:InvokeAsync",
				"lambda:ListAliases",
				"lambda:ListCodeSigningConfigs",
				"lambda:ListEventSourceMappings",
				"lambda:ListFunctions",
				"lambda:ListFunctionsByCodeSigningConfig",
				"lambda:ListTags",
				"lambda:ListVersionsByFunction",
				"lambda:PublishVersion",
				"lambda:PutFunctionCodeSigningConfig",
				"lambda:PutFunctionConcurrency",
				"lambda:RemovePermission",
				"lambda:TagResource",
				"lambda:UpdateAlias",
				"lambda:UpdateCodeSigningConfig",
				"lambda:UpdateEventSourceMapping",
				"lambda:UpdateFunctionCode",
				"lambda:UpdateFunctionCodeSigningConfig",
				"lambda:UpdateFunctionConfiguration",
				"logs:AssociateKmsKey",
				"logs:CreateLogGroup",
				"logs:CreateLogStream",
				"logs:DeleteLogStream",
				"logs:DeleteLogGroup",
				"logs:DeleteLogStream",
				"logs:DeleteSubscriptionFilter",
				"logs:DeleteRetentionPolicy",
				"logs:DescribeLogGroups",
				"logs:DescribeLogStreams",
				"logs:DescribeSubscriptionFilters",
				"logs:ListTagsLogGroup",
				"logs:ListTagsForResource",
				"logs:PutRetentionPolicy",
				"logs:PutSubscriptionFilter",
				"logs:TagLogGroup",
				"logs:UntagLogGroup",
				"route53:ChangeResourceRecordSets",
				"route53:ChangeTagsForResource",
				"route53:CreateHostedZone",
				"route53:DeleteHostedZone",
				"route53:GetChange",
				"route53:GetHostedZone",
				"route53:ListHostedZones",
				"route53:ListHostedZonesByName",
				"route53:ListResourceRecordSets",
				"route53:ListTagsForResource",
				"s3:CreateBucket",
				"s3:DeleteBucket",
				"s3:DeleteBucketPolicy",
				"s3:DeleteObject",
				"s3:DeleteObjectVersion",
				"s3:GetAccelerateConfiguration",
				"s3:GetBucketAcl",
				"s3:GetBucketCORS",
				"s3:GetBucketLogging",
				"s3:GetBucketObjectLockConfiguration",
				"s3:GetBucketPolicy",
				"s3:GetBucketPublicAccessBlock",
				"s3:GetBucketRequestPayment",
				"s3:GetBucketTagging",
				"s3:GetBucketVersioning",
				"s3:GetBucketWebsite",
				"s3:GetEncryptionConfiguration",
				"s3:GetLifecycleConfiguration",
				"s3:GetObject",
				"s3:GetObjectTagging",
				"s3:GetObjectVersion",
				"s3:GetReplicationConfiguration",
				"s3:ListBucket",
				"s3:ListAllMyBuckets",
				"s3:ListBucketVersions",
				"s3:PutBucketAcl",
				"s3:PutBucketCORS",
				"s3:PutBucketLogging",
				"s3:PutBucketPolicy",
				"s3:PutBucketPublicAccessBlock",
				"s3:PutBucketTagging",
				"s3:PutBucketVersioning",
				"s3:PutEncryptionConfiguration",
				"s3:PutObject",
				"secretsmanager:CancelRotateSecret",
				"secretsmanager:CreateSecret",
				"secretsmanager:DeleteSecret",
				"secretsmanager:DescribeSecret",
				"secretsmanager:GetResourcePolicy",
				"secretsmanager:GetSecretValue",
				"secretsmanager:PutResourcePolicy",
				"secretsmanager:RotateSecret",
				"secretsmanager:TagResource",
				"secretsmanager:UpdateSecret",
				"secretsmanager:UpdateSecretVersionStage",
				"wafv2:AssociateWebACL",
				"wafv2:CreateWebACL",
				"wafv2:DeleteWebACL",
				"wafv2:GetWebACL",
				"wafv2:GetWebACLForResource",
				"wafv2:ListTagsForResource",
				"wafv2:TagResource",
				"wafv2:DeleteLoggingConfiguration",
				"wafv2:GetLoggingConfiguration",
				"wafv2:ListLoggingConfigurations",
				"wafv2:UpdateWebACL",
				"wafv2:PutLoggingConfiguration"
			],
			"Effect": "Allow",
			"Resource": "*"
		}
	]
}